<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <meta name="author" content="Catalytic Sound">

    <title>%title%</title>
<meta name="description" content="%description%">
<meta name="keywords" content="%keyword%">


    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom Fonts CSS -->
    <link href="css/customfonts.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/anim.min.css" rel="stylesheet">
    <link href="css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href="css/styles.css" rel="stylesheet">

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/manifest.json">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="theme-color" content="#ffffff">

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@kenvandermark">
    <meta name="twitter:url" content="http://catalyticsound.com">
    <meta name="twitter:title" content="Catalytic Sound">
    

    
    
    
    
    

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>


<body>

        
    <!-- Navigation -->
    <nav class="navbar" role="navigation">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                %INSIDE_LINK_0%
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav first-nav">
                    <li class="social-icon">
                        %INSIDE_LINK_1%
                    </li>
                    <!--<li class="social-icon">
                        <a class="social-twitter" target="_blank" href="#"><i class="fa fa-twitter fa-lg"></i></a>
                    </li>-->
                    <li class="social-icon">
                        %INSIDE_LINK_2%
                    </li>
                    <li class="social-icon">
                        %INSIDE_LINK_3%
                    </li>
                    <li>

                        <form id="busqueda" action="searchresults.php" method="get">
                        <div class="form-group has-feedback">
                            <input type="text" name="search" placeholder="Search here" >
                            <span class="glyphicon glyphicon-search form-control-feedback"></span>
                        </div>
                        </form>
                    </li>
                </ul>

            <div>
                <ul class="nav navbar-nav nav-principal">
                    <li class="dropdown">
                        %INSIDE_LINK_4%
                        <ul class="dropdown-menu drop-principal animated fadeIn">

                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_5%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_6%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_7%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_8%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_9%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_10%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_11%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_12%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_13%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_14%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_15%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_16%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_17%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_18%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_19%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_20%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_21%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_22%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_23%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_24%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_25%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_26%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_27%</li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_28%</li>


                            

                        </ul>
                    </li>

                    
                    <li class="dropdown">
                        %INSIDE_LINK_29%
                        <ul class="dropdown-menu drop-principal animated fadeIn">

                        
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_30%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_31%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_32%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_33%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_34%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_35%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_36%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_37%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_38%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_39%<span class="label-musician-info wow slideInRight" data-wow-duration="0.9s"></span></li>


                            

                        </ul>
                    </li>
                    <li class="dropdown">
                        %INSIDE_LINK_40%
                        <ul class="dropdown-menu drop-principal animated fadeIn paddingleft-fix">
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_41%</li>
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_42%</li>
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_43%</li>
                        </ul>
                    </li>
                    <li class="dropdown">
                        %INSIDE_LINK_44%
                            <ul class="dropdown-menu drop-principal animated fadeIn paddingleft-fix">
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_45%</li>
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_46%</li>
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_47%</li>
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_48%</li>
                            
                            <li class="wow flash" data-wow-duration="0.6s"><span class="span-hover glyphicon glyphicon-chevron-right"></span>%INSIDE_LINK_49%</li>
                        </ul>
                    </li>
                    <li>
                        %INSIDE_LINK_50%
                    </li>
                    <li>
                        %INSIDE_LINK_51%
                    </li>
                    <li>
                        %INSIDE_LINK_52%
                    </li>
                    <li>
                        %INSIDE_LINK_53%
                    </li>
                    <li>
                        %INSIDE_LINK_54%
                    </li>
                </ul>
                <div class="nav-curtain hid-header"></div>
            </div>

            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container -->
    </nav>

    <!-- Half Page Image Background Carousel Header -->

<header>


        <div class="container-fluid row">

        <div class="artist-page-descripcion row">

            <div class="container">

                <div class="row">


                    <div class="col-sm-12">
                        <h1><span class="label-page-musician-span"></span></h1>

                        <p></p>

                        
                        
                                                                        
                        <hr class="separador-no-carousel">
                    </div>

                </div>
            </div>

        </div>


    </div>

</header>

    <!-- Page Content -->
    <div class="container">

        <div class="row">
            <div class="col-lg-12">

    
   <!-- Catalog Section -->
    <section id="catalog" class="catalog-section">
        <div class="">
            <div class="row">
                <div class="col-lg-12">
                    <!--<div class="button-group filter-button-group">
                      <button class="btn" data-filter="*">All</button>
                      <button class="btn" data-filter=".Cd">Cd</button>
                      <button class="btn" data-filter=".DVD">DVD</button>
                      <button class="btn" data-filter=".Lp">Lp</button>
                      <button class="btn" data-filter=".Book">Digital</button>
                    </div>-->
                </div>
            </div>

            <div class="row fila-discos filterdiscos">

                        <div class="col-sm-6 col-md-3 disco Digital newaddition">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_55%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_56%
                </div>

                            <div class="col-sm-6 col-md-3 disco Digital newaddition">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_57%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_58%
                </div>

                            <div class="col-sm-6 col-md-3 disco Digital newaddition">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_59%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_60%
                </div>

                            <div class="col-sm-6 col-md-3 disco Digital newaddition">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_61%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_62%
                </div>

                            <div class="col-sm-6 col-md-3 disco Digital newrelease">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_63%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_64%
                </div>

                            <div class="col-sm-6 col-md-3 disco Digital newaddition">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_65%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_66%
                </div>

                            <div class="col-sm-6 col-md-3 disco Book">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_67%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_68%
                </div>

                            <div class="col-sm-6 col-md-3 disco Poster">
                    <!--<a class="img-responsive" href="record.php?id=">-->
                    <!--<a class="img-responsive" target="_blank" href="">-->

                    %INSIDE_LINK_69%
                    <!--<p class="album-details-title"></p>
                    <p class="album-details-title"></p>-->
                </div>

                <div class="col-sm-6 col-md-3">
                    %INSIDE_LINK_70%
                </div>

                

            </div>



            <nav class='nav-pagination' aria-label='Page navigation'>
            <ul class='pagination'><li  >%INSIDE_LINK_71%</li><li  >%INSIDE_LINK_72%</li><li  >%INSIDE_LINK_73%</li><li  >%INSIDE_LINK_74%</li><li  >%INSIDE_LINK_75%</li><li  >%INSIDE_LINK_76%</li></ul>
                            </nav>
        </div>
    </section>



            </div>
        </div>

            <!-- Footer -->
        <footer>
            <div class="row">
                <div class="col-lg-12 footer-inner">

                    <div class="row">

                            <div class="col-sm-3 copyright-info">
                                <p>%text%</p>
                            </div>

                            <div class="col-sm-9">
                                <ul class="nav navbar navbar-nav last-nav">
                                    <li class="social-icon">
                                        %INSIDE_LINK_77%
                                    </li>
                                    <!--<li class="social-icon">
                                        <a class="social-twitter" target="_blank" href="#"><i class="fa fa-twitter fa-lg"></i></a>
                                    </li>-->
                                    <li class="social-icon">
                                        %INSIDE_LINK_78%
                                    </li>
                                    <li class="social-icon">
                                        %INSIDE_LINK_79%
                                    </li>
                                    <li>
                                        
                                        
                                        <form action="https://catalytic-sound.us2.list-manage.com/subscribe/post?u=57a33819db3bd2440cbfed0ee&amp;id=f8824338fa" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate subscription-form" target="_blank" novalidate>
                                            <div id="mc_embed_signup_scroll">
                                                <label for="mce-EMAIL"></label>
                                            	<input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
                                                <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                                                <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_57a33819db3bd2440cbfed0ee_f8824338fa" tabindex="-1" value=""></div>                                    
                                                <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button">
                                            </div>
                                        </form>
                                        
                                        <div id="suboutput"></div>
                                    </li>
                                </ul>

                            </div>
                    </div>
                </div>
            </div>
            <!-- /.row -->
        </footer>

    </div>
    <!-- /.container -->

    <!-- jQuery -->
    <script src="js/jquery.js"></script>

    <!-- Bootstrap Core JavaScript -->
    <script src="js/bootstrap.min.js"></script>

    <!-- wow delay -->
    <script src="js/wow.js"></script>
              <script>
              new WOW().init();
    </script>

    <!-- Script to Activate the Carousel -->
    <!--<script>
    $('.carousel').carousel({
        interval: 5000 //changes the speed
    })
    </script>-->

    <!--<script type="text/javascript">
        $(document).ready(function(ev){
    $('#albumfront_carousel').on('slide.bs.carousel', function (evt) {
      $('#albumfront_carousel .controls li.active').removeClass('active');
      $('#albumfront_carousel .controls li:eq('+$(evt.relatedTarget).index()+')').addClass('active');
    })
});
    </script>-->


    <!--<script type="text/javascript">
        $('.dropdown-toggle').on('shown.bs.dropdown', function () {
            $( "#albumfront_carousel" ).addClass( ".hid-carousel" );
        })
    </script>-->

<script src="js/menuhide.js"></script>

<div class="modal fade" id="shopmodal" tabindex="-1" role="dialog"  aria-labelledby="shopmodalLabel" aria-hidden="true">
      <div class="modal-dialog">
         <div class="modal-content">
            <div class="modal-header">
                <!--<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>-->
                <h4 class="modal-title" id="shopmodalLabel"></h4>
                <p class="modal-link-p"><button class="modal-link" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-arrow-left"></span></button></p>
           </div>
         <div class="modal-body">
              <iframe class="modal-iframe" frameborder="0"></iframe>
         </div>
        <!-- <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

         </div>-->
        </div><!-- /.modal-content -->
     </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->

  <script type="text/javascript">$('a.modalButton').on('click', function(e) {
    var src = $(this).attr('data-src');
    var height = $(this).attr('data-height') || 600;
    var width = $(this).attr('data-width') || 900;


    $("#shopmodal iframe").attr({'src':src,
                        'height': height,
                        'width': width});
});
</script>

<script type="text/javascript" src="js/jquery.validate.min.js"></script>
<script type="text/javascript" src="js/additional-methods.min.js"></script>
<script type="text/javascript" src="js/ajaxsubscription.js"></script>


</body>

</html>
